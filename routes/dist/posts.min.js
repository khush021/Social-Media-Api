"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}var Post=require("../models/Post"),router=require("express").Router(),User=require("../models/User");router.post("/",function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=new Post(r.body),e.prev=1,e.next=4,regeneratorRuntime.awrap(n.save());case 4:s=e.sent,t.status(200).json(s),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),t.status(500).json(e.t0);case 11:case"end":return e.stop()}},null,null,[[1,8]])}),router.put("/:id",function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Post.findById(r.params.id));case 3:if((n=e.sent).userId===r.body.userId)return e.next=7,regeneratorRuntime.awrap(n.updateOne({$set:r.body}));e.next=10;break;case 7:t.status(200).json("Post has been updated successfully"),e.next=11;break;case 10:t.status(403).json("You cannot update other's post");case 11:e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),t.status(500).json(e.t0);case 16:case"end":return e.stop()}},null,null,[[0,13]])}),router.delete("/:id",function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Post.findById(r.params.id));case 3:if((n=e.sent).userId===r.body.userId)return e.next=7,regeneratorRuntime.awrap(n.deleteOne());e.next=10;break;case 7:t.status(200).json("Post has been deleted successfully."),e.next=11;break;case 10:t.status(403).json("You cannot delete other's post");case 11:e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),t.status(500).json(e.t0);case 16:case"end":return e.stop()}},null,null,[[0,13]])}),router.put("/:id/like",function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Post.findById(r.params.id));case 3:if((n=e.sent).likes.includes(r.body.userId)){e.next=10;break}return e.next=7,regeneratorRuntime.awrap(n.updateOne({$push:{likes:r.body.userId}}));case 7:t.status(200).json("Post has been liked successfully."),e.next=13;break;case 10:return e.next=12,regeneratorRuntime.awrap(n.updateOne({$pull:{likes:r.body.userId}}));case 12:t.status(200).json("Post has been disliked successfully.");case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),t.status(500).json(e.t0);case 18:case"end":return e.stop()}},null,null,[[0,15]])}),router.get("/:id",function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Post.findById(r.params.id));case 3:n=e.sent,t.status(200).json(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.status(500).json(e.t0);case 10:case"end":return e.stop()}},null,null,[[0,7]])}),router.get("/timeline/:userId",function(r,t){var n,s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.findById(r.params.userId));case 3:return n=e.sent,e.next=6,regeneratorRuntime.awrap(Post.find({userId:n._id}));case 6:return s=e.sent,e.next=9,regeneratorRuntime.awrap(Promise.all(n.followings.map(function(e){return Post.find({userId:e})})));case 9:a=e.sent,t.status(200).json(s.concat.apply(s,_toConsumableArray(a))),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),t.status(500).json(e.t0);case 16:case"end":return e.stop()}},null,null,[[0,13]])}),router.get("/profile/:username",function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.findOne({username:r.params.username}));case 3:return n=e.sent,e.next=6,regeneratorRuntime.awrap(Post.find({userId:n._id}));case 6:s=e.sent,t.status(200).json(s),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),t.status(500).json(e.t0);case 13:case"end":return e.stop()}},null,null,[[0,10]])}),module.exports=router;
//# sourceMappingURL=posts.min.js.map
