{"version":3,"sources":["posts.js"],"names":["Post","require","router","Router","User","post","req","res","newPost","savedPost","regeneratorRuntime","async","_context","prev","next","body","awrap","save","sent","status","json","t0","stop","put","_context2","findById","params","id","userId","updateOne","$set","_context3","deleteOne","_context4","likes","includes","$push","$pull","get","_context5","currentUser","userPosts","friendPosts","_context6","find","_id","Promise","all","friendId","concat","apply","_toConsumableArray","user","posts","_context7","findOne","username","module","exports"],"mappings":"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","file":"posts.min.js","sourcesContent":["const Post = require(\"../models/Post\");\r\nconst router = require(\"express\").Router();\r\nconst User = require(\"../models/User\");\r\n\r\n//create a post \r\nrouter.post(\"/\", async (req, res) => {\r\n    const newPost = new Post(req.body);\r\n    try {\r\n      const savedPost = await newPost.save();\r\n      res.status(200).json(savedPost);\r\n    } catch (err) {\r\n      res.status(500).json(err);\r\n    }\r\n  });\r\n//update a post\r\n\r\nrouter.put(\"/:id\", async (req, res) => {\r\n    try {\r\n      const post = await Post.findById(req.params.id);\r\n      if (post.userId === req.body.userId) {\r\n        await post.updateOne({ $set: req.body });\r\n        res.status(200).json(\"Post has been updated successfully\");\r\n      } else {\r\n        res.status(403).json(\"You cannot update other's post\");\r\n      }\r\n    } catch (err) {\r\n      res.status(500).json(err);\r\n    }\r\n  });\r\n//delete a post\r\nrouter.delete(\"/:id\", async (req, res) => {\r\n  try {\r\n    const post = await Post.findById(req.params.id);\r\n    if (post.userId === req.body.userId) {\r\n      await post.deleteOne();\r\n      res.status(200).json(\"Post has been deleted successfully.\");\r\n    } else {\r\n      res.status(403).json(\"You cannot delete other's post\");\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json(err);\r\n  }\r\n});\r\n//like / dislike a post\r\nrouter.put(\"/:id/like\", async (req, res)=>{\r\n  try {\r\n    const post = await Post.findById(req.params.id);\r\n    if (!post.likes.includes(req.body.userId)) {\r\n      await post.updateOne({ $push: { likes: req.body.userId } });\r\n      res.status(200).json(\"Post has been liked successfully.\");\r\n    } else {\r\n      await post.updateOne({ $pull: { likes: req.body.userId } });\r\n      res.status(200).json(\"Post has been disliked successfully.\");\r\n    }\r\n  } catch (err) {\r\n    res.status(500).json(err);\r\n  }\r\n});\r\n//get a post\r\n\r\nrouter.get(\"/:id\", async (req, res) => {\r\n  try {\r\n    const post = await Post.findById(req.params.id);\r\n    res.status(200).json(post);\r\n  } catch (err) {\r\n    res.status(500).json(err);\r\n  }\r\n});\r\n\r\n//get timeline posts\r\n\r\nrouter.get(\"/timeline/:userId\", async (req, res) => {\r\n  try {\r\n    const currentUser = await User.findById(req.params.userId);\r\n    const userPosts = await Post.find({ userId: currentUser._id });\r\n    const friendPosts = await Promise.all(\r\n      currentUser.followings.map((friendId) => {\r\n        return Post.find({ userId: friendId });\r\n      })\r\n    );\r\n    res.status(200).json(userPosts.concat(...friendPosts))\r\n  } catch (err) {\r\n    res.status(500).json(err);\r\n  }\r\n});\r\n\r\n\r\n//get user's all posts\r\n\r\nrouter.get(\"/profile/:username\", async (req, res) => {\r\n  try {\r\n    const user = await User.findOne({username: req.params.username})\r\n    const posts = await Post.find({userId:user._id});\r\n    res.status(200).json(posts);\r\n  } catch (err) {\r\n    res.status(500).json(err);\r\n  }\r\n});\r\n\r\nmodule.exports = router;"]}